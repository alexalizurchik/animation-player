{"version":3,"sources":["components/frame/Frame.js","components/frameList/FrameList.js","components/colorPalette/ColorPalette.js","components/tools/Tools.js","components/preview/Preview.js","components/FPS/FPS.js","components/canvas/Canvas.js","components/canvas/Pen.js","components/app/App.js","index.js"],"names":["Frame","_ref","active","onDelete","onDouble","onNumClick","num","image","onFrameClick","react_default","a","createElement","className","concat","onClick","alt","src","e","stopPropagation","defaultProps","FrameList","activeFrame","frames","onAddFrame","map","frame","frame_Frame","key","ColorPalette","props","Object","assign","type","Tools","onDrawAction","onChooseColorAction","onPrimaryColorChange","onSecondaryColorChange","onColorChange","primaryColor","secondaryColor","isDrawAction","isChooseColorAction","colorPalette_ColorPalette","onChange","value","Preview","framesPerSecond","onFullScreenShow","_useState","useState","_useState2","slicedToArray","frameInd","setFrameInd","currentFrame","previewRef","useRef","useEffect","timer","setTimeout","nextFrame","length","clearTimeout","ref","current","onMouseOver","FPS","setFramesPerSecond","name","min","max","defaultValue","target","CanvasContext","React","createContext","Canvas","canvasRef","setCanvasRef","getContext","clearRect","width","height","img","Image","addEventListener","handler","drawImage","removeEventListener","Provider","children","Pen","onMouseUp","currentColor","canvas","useContext","Function","prototype","isMouseDown","setMouseDown","getImgLink","toDataURL","ctx","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","lineWidth","lineTo","strokeStyle","stroke","beginPath","arc","Math","PI","fillStyle","fill","moveTo","useSetToolAction","isColorPaletteAction","toolAction","setToolAction","toggleToolAction","keyName","keyValue","newObj","objectWithoutProperties","_toPropertyKey","keys","forEach","App","_useState3","_useState4","_useState5","_useState6","setFrames","_useState7","_useState8","setActiveFrame","_useSetToolAction","_useState9","_useState10","setPrimaryColor","_useState11","_useState12","setSecondaryColor","tools_Tools","console","log","frameList_FrameList","newArr","toConsumableArray","splice","elem","ind","objectSpread","push","slice","canvas_Canvas","canvas_Pen","preview_Preview","el","requestFullscreen","FPS_FPS","ReactDOM","render","app_App","document","getElementById"],"mappings":"wXAIA,SAASA,EAATC,GAEG,IADDC,EACCD,EADDC,OAAQC,EACPF,EADOE,SAAUC,EACjBH,EADiBG,SAAUC,EAC3BJ,EAD2BI,WAAYC,EACvCL,EADuCK,IAAKC,EAC5CN,EAD4CM,MAAOC,EACnDP,EADmDO,aAepD,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,SAAAC,OAAWX,EAAS,gBAAkB,IAAMY,QAAS,kBAAMN,EAAaF,KACnFC,GAASE,EAAAC,EAAAC,cAAA,OAAKI,IAAI,MAAMH,UAAU,aAAaI,IAAKT,IAErDE,EAAAC,EAAAC,cAAA,UAAQG,QAjBS,SAACG,GACpBA,EAAEC,kBACFf,EAASG,EAAKW,IAemBL,UAAU,kBACzCH,EAAAC,EAAAC,cAAA,UAAQG,QAdS,SAACG,GACpBA,EAAEC,kBACFd,EAASE,EAAKW,IAYmBL,UAAU,gBACzCH,EAAAC,EAAAC,cAAA,UAAQG,QAXW,SAACG,GACtBA,EAAEC,kBACFb,EAAWY,IASwBL,UAAU,2BAA2BN,EAAM,IAelFN,EAAMmB,aAAe,CACnBjB,QAAQ,GAGKF,cCDAoB,MAvCf,SAAAnB,GAEG,IADDoB,EACCpB,EADDoB,YAAalB,EACZF,EADYE,SAAUC,EACtBH,EADsBG,SAAUC,EAChCJ,EADgCI,WAAYiB,EAC5CrB,EAD4CqB,OAAQd,EACpDP,EADoDO,aAAce,EAClEtB,EADkEsB,WAEnE,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZU,EAAOE,IAAI,SAAAC,GAAK,OACfhB,EAAAC,EAAAC,cAACe,EAAD,CACExB,OAAQmB,IAAgBI,EAAMnB,IAC9BqB,IAAKF,EAAMnB,IACXA,IAAKmB,EAAMnB,IACXC,MAAOkB,EAAMlB,MACbJ,SAAUA,EACVC,SAAUA,EACVC,WAAYA,EACZG,aAAcA,MAGlBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBE,QAASS,GAA9C,4BCdOK,MANf,SAAsBC,GACpB,OACEpB,EAAAC,EAAAC,cAAA,QAAAmB,OAAAC,OAAA,CAAOnB,UAAU,gBAAgBoB,KAAK,SAAYH,WCCtD,SAASI,EAAThC,GASG,IARDC,EAQCD,EARDC,OACAgC,EAOCjC,EAPDiC,aACAC,EAMClC,EANDkC,oBACAC,EAKCnC,EALDmC,qBACAC,EAICpC,EAJDoC,uBACAC,EAGCrC,EAHDqC,cACAC,EAECtC,EAFDsC,aACAC,EACCvC,EADDuC,eAEA,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAS,eAAAC,OAAiBX,EAAOuC,aAAe,sBAAwB,KAC1EhC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcE,QAASoB,KAE3CzB,EAAAC,EAAAC,cAAA,MAAIC,UAAS,eAAAC,OAAiBX,EAAOwC,oBAAsB,sBAAwB,KACjFjC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBE,QAASqB,KAEnD1B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAEpBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAGtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACgC,EAAD,CAAcC,SAAUR,EAAsBS,MAAON,KAEvD9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAACgC,EAAD,CAAcC,SAAUP,EAAwBQ,MAAOL,KAEzD/B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeE,QAASwB,MAuBlDL,EAAMd,aAAe,CACnBjB,QAAQ,GAGK+B,cClBAa,MA5Cf,SAAA7C,GAEG,IADDqB,EACCrB,EADDqB,OAAQyB,EACP9C,EADO8C,gBAAiBC,EACxB/C,EADwB+C,iBACxBC,EAC+BC,mBAAS,GADxCC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACMI,EADNF,EAAA,GACgBG,EADhBH,EAAA,GAEKI,EAAejC,EAAO+B,GACtBG,EAAaC,iBAAO,MAe1B,OAbAC,oBAAU,WACR,IAAMC,EAAQC,WAAW,WACvB,IAAMC,EAAYR,EAAW/B,EAAOwC,OAAS,EACzCT,EAAW,EACX,EAEJC,EAAYO,IACX,IAAOd,GAEV,OAAO,kBAAMgB,aAAaJ,KACzB,CAACZ,EAAiBM,EAAU/B,IAI7Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBoD,IAAKR,GACvC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZ2C,GAAgBA,EAAahD,MAC1BE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBI,IAAKuC,EAAahD,MAAOQ,IAAI,UAChEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEnBH,EAAAC,EAAAC,cAAA,UAAQG,QAAU,SAAAG,GAAC,OAAI+B,EAAiBQ,EAAWS,QAAShD,IAAIiD,YATlD,kBAAMzD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,wBASqEA,UAAU,gCCV5FuD,MAjBf,SAAAlE,GAA2B,IAAZ2C,EAAY3C,EAAZ2C,SAAYK,EACqBC,mBAAS,GAD9BC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GAClBF,EADkBI,EAAA,GACDiB,EADCjB,EAAA,GAEzB,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,YAAOoC,EAAP,QACAtC,EAAAC,EAAAC,cAAA,SAAOqB,KAAK,QAAQqC,KAAK,QAAQC,IAAK,EAAGC,IAAK,GAAIC,aAAc,EAAG5B,SAAW,SAAC3B,GAC7EmD,GAAoBnD,EAAEwD,OAAO5B,OAC7BD,EAASG,QCNJ2B,SAAgBC,IAAMC,cAAc,OA8ClCC,MA5Cf,SAAgBhD,GAAO,IAAAoB,EACaC,mBAAS,MADtBC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACd6B,EADc3B,EAAA,GACH4B,EADG5B,EAAA,GAuBrB,OApBAO,oBAAU,WAGR,GAAIoB,IAFsBA,EAAUE,WAAW,MAAMC,UAAU,EAAG,EAAGpD,EAAMqD,MAAOrD,EAAMsD,QAKlFtD,EAAMtB,OAAO,CACf,IAAM6E,EAAM,IAAIC,MAEhBD,EAAIpE,IAAMa,EAAMtB,MAMhB6E,EAAIE,iBAAiB,OALL,SAAVC,IACJT,EAAUE,WAAW,MAAMQ,UAAUJ,EAAK,EAAG,GAE7CA,EAAIK,oBAAoB,OAAQF,OAKrC,CAAC1D,EAAMtB,MAAOuE,EAAWjD,EAAMqD,MAAOrD,EAAMsD,SAG7C1E,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACVoD,IAAK,SAAAA,GAAG,OAAIe,EAAaf,IACzBkB,MAAK,GAAArE,OAAKgB,EAAMqD,MAAX,MACLC,OAAM,GAAAtE,OAAKgB,EAAMsD,OAAX,OAEN1E,EAAAC,EAAAC,cAAC+D,EAAcgB,SAAf,CAAwB7C,MAAOiC,GAC5BjD,EAAM8D,YCoBAC,EAvDH,SAAA3F,GAAiC,IAA9B4F,EAA8B5F,EAA9B4F,UAAWC,EAAmB7F,EAAnB6F,aAClBC,EAASC,qBAAWtB,GAmD1B,OAjDAhB,oBAAU,WACR,IAAKqC,EACH,OAAOE,SAASC,UAGlB,IAAIC,GAAc,EACZC,EAAe,WACnBD,GAAeA,GAEXE,EAAa,WACjBR,EAAUE,EAAOO,cAGbf,EAAU,SAACtE,GACf,IAAMsF,EAAMR,EAAOf,WAAW,MACxBwB,EAAOT,EAAOU,wBACdC,EAAIzF,EAAE0F,QAAUH,EAAKI,KACrBC,EAAI5F,EAAE6F,QAAUN,EAAKO,IAE3BR,EAAIS,UAAY,GAEZb,GACFI,EAAIU,OAAOP,EAAGG,GACdN,EAAIW,YAAcpB,EAClBS,EAAIY,SACJZ,EAAIa,YACJb,EAAIc,IAAIX,EAAGG,EAAG,EAAG,EAAa,EAAVS,KAAKC,IACzBhB,EAAIiB,UAAY1B,EAChBS,EAAIkB,OACJlB,EAAIa,YACJb,EAAImB,OAAOhB,EAAGG,IAEdN,EAAIa,aASR,OALArB,EAAOT,iBAAiB,YAAaC,GACrCQ,EAAOT,iBAAiB,YAAac,GACrCL,EAAOT,iBAAiB,UAAWc,GACnCL,EAAOT,iBAAiB,UAAWe,GAE5B,WACLN,EAAON,oBAAoB,YAAaF,GACxCQ,EAAON,oBAAoB,YAAaW,GACxCL,EAAON,oBAAoB,UAAWW,GACtCL,EAAON,oBAAoB,UAAWY,KAEvC,CAACN,EAAQF,EAAWC,IAEhB,uVC9CT,IAAM6B,EAAmB,WAAM,IAAA1E,EACOC,mBAClC,CAAET,cAAc,EAAOC,qBAAqB,EAAOkF,sBAAsB,IAF9CzE,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAmB,EAAA,GACtB4E,EADsB1E,EAAA,GACV2E,EADU3E,EAAA,GAgB7B,MAAO,CAAE4E,iBAXgB,SAACC,GAAY,IACjBC,EAAwBJ,EAAlCG,GAAuBE,EADIpG,OAAAqG,EAAA,EAAArG,CACO+F,EADP,CAC3BG,GAD2BxG,IAAA4G,IAGpCtG,OAAOuG,KAAKH,GAAQI,QAAQ,SAAC3G,GAC3BuG,EAAOvG,IAAO,IAGhBuG,EAAOF,IAAYC,EACnBH,EAAcI,IAGWL,eA8GdU,MA3Gf,WAAe,IAAAC,EACiCtF,mBAAS,GAD1CuF,EAAA3G,OAAAsB,EAAA,EAAAtB,CAAA0G,EAAA,GACNzF,EADM0F,EAAA,GACWrE,EADXqE,EAAA,GAAAC,EAEexF,mBAAS,CAAC,CAAE5C,IAAK,KAFhCqI,EAAA7G,OAAAsB,EAAA,EAAAtB,CAAA4G,EAAA,GAENpH,EAFMqH,EAAA,GAEEC,EAFFD,EAAA,GAAAE,EAGyB3F,mBAAS,GAHlC4F,EAAAhH,OAAAsB,EAAA,EAAAtB,CAAA+G,EAAA,GAGNxH,EAHMyH,EAAA,GAGOC,EAHPD,EAAA,GAAAE,EAI4BrB,IAAjCI,EAJKiB,EAILjB,iBAAkBF,EAJbmB,EAIanB,WAJboB,EAK2B/F,mBAAS,QALpCgG,EAAApH,OAAAsB,EAAA,EAAAtB,CAAAmH,EAAA,GAKN1G,EALM2G,EAAA,GAKQC,EALRD,EAAA,GAAAE,EAM+BlG,mBAAS,QANxCmG,EAAAvH,OAAAsB,EAAA,EAAAtB,CAAAsH,EAAA,GAMN5G,EANM6G,EAAA,GAMUC,EANVD,EAAA,GAQb,OACE5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAAC4I,EAAD,CACErJ,OAAQ2H,EACR3F,aAAc,WACZ6F,EAAiB,iBAEnB5F,oBAAqB,WACnB4F,EAAiB,wBAEnB3F,qBAAuB,SAAAnB,GAAC,OAAIkI,EAAgBlI,EAAEwD,OAAO5B,QACrDR,uBAAyB,SAAApB,GAAC,OAAIqI,EAAkBrI,EAAEwD,OAAO5B,QACzDP,cAAe,WACbkH,QAAQC,IAAI,GACZ,IAAM3D,EAAevD,EACrBiH,QAAQC,IAAIlH,GACZ4G,EAAgB3G,GAChB8G,EAAkBxD,GAClB0D,QAAQC,IAAIjH,IAEdD,aAAcA,EACdC,eAAgBA,IAElB/B,EAAAC,EAAAC,cAAC+I,EAAD,CACErI,YAAaA,EACbC,OAAQA,EACRnB,SAAU,SAACG,GACT,IAAIqJ,EAAM7H,OAAA8H,EAAA,EAAA9H,CAAOR,GAEjBqI,EAAOE,OAAOvJ,EAAK,GAMG,KALtBqJ,EAASA,EAAOnI,IAAI,SAACsI,EAAMC,GAAP,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAA,GACfgI,EADe,CAElBxJ,IAAKyJ,OAGIjG,QACT6F,EAAOM,KAAK,CAAE3J,IAAK,IAGrBsI,EAAUe,GACVZ,EAAe1H,EAAc,IAE/Bb,aAAc,SAAAF,GAAG,OAAIyI,EAAezI,IACpCF,SAAU,SAACE,GACT,IAAIqJ,EAAM7H,OAAA8H,EAAA,EAAA9H,CAAOR,GAEjBqI,EAAOE,OAAOvJ,EAAK,EAAGqJ,EAAOrJ,IAC7BqJ,EAASA,EAAOnI,IAAI,SAACsI,EAAMC,GAAP,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAA,GACfgI,EADe,CAElBxJ,IAAKyJ,MAGPnB,EAAUe,GACVZ,EAAezI,EAAM,IAGvBiB,WAAY,WACV,IAAMsC,EAAYvC,EAAOwC,OACnB6F,EAASrI,EAAO4I,QAEtBP,EAAOM,KAAK,CAAE3J,IAAKuD,IAEnBkF,EAAelF,GACf+E,EAAUe,OAIhBlJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZU,EAAOD,IACNZ,EAAAC,EAAAC,cAACwJ,EAAD,CAAQjF,MAAO,IAAKC,OAAQ,IAAK5E,MAAOe,EAAOD,GAAad,OACzDsH,EAAWpF,cACVhC,EAAAC,EAAAC,cAACyJ,EAAD,CACEvE,UAAY,SAAChD,GACX,IAAM8G,EAASrI,EAAO4I,QACtBP,EAAOtI,GAAad,MAAQsC,EAC5B+F,EAAUe,IAEZ7D,aAAcvD,MAMxB9B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBACfH,EAAAC,EAAAC,cAAC0J,EAAD,CAAS/I,OAAQA,EAAQyB,gBAAiBA,EAAiBC,iBAAmB,SAACsH,GAC7EA,EAAGC,uBAEL9J,EAAAC,EAAAC,cAAC6J,EAAD,CAAK5H,SAAU,SAAAC,GAAK,OAAIuB,EAAmBvB,gBC1HrD4H,IAASC,OACPjK,EAAAC,EAAAC,cAACgK,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.56aaf560.chunk.js","sourcesContent":["import React from 'react';\nimport './frame.css';\nimport PropTypes from 'prop-types';\n\nfunction Frame({\n  active, onDelete, onDouble, onNumClick, num, image, onFrameClick,\n}) {\n  const handleDelete = (e) => {\n    e.stopPropagation();\n    onDelete(num, e);\n  };\n  const handleDouble = (e) => {\n    e.stopPropagation();\n    onDouble(num, e);\n  };\n  const handleNumClick = (e) => {\n    e.stopPropagation();\n    onNumClick(e);\n  };\n\n  return (\n    <div className={`frame ${active ? 'frame--active' : ''}`} onClick={() => onFrameClick(num)}>\n      {image && <img alt=\"pic\" className=\"frame__img\" src={image} />}\n\n      <button onClick={handleDelete} className=\"delete-action\" />\n      <button onClick={handleDouble} className=\"copy-action\" />\n      <button onClick={handleNumClick} className=\"add-to-animation-action\">{num + 1}</button>\n    </div>\n  );\n}\n\nFrame.propTypes = {\n  active: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDouble: PropTypes.func,\n  onNumClick: PropTypes.func,\n  num: PropTypes.number,\n  image: PropTypes.any,\n  onFrameClick: PropTypes.func,\n};\n\nFrame.defaultProps = {\n  active: false,\n};\n\nexport default Frame;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Frame from '../frame/Frame';\nimport './frameList.css';\n\nfunction FrameList({\n  activeFrame, onDelete, onDouble, onNumClick, frames, onFrameClick, onAddFrame,\n}) {\n  return (\n    <div className=\"frame-list-wrapper\">\n      <div className=\"frame-list\">\n        {frames.map(frame => (\n          <Frame\n            active={activeFrame === frame.num}\n            key={frame.num}\n            num={frame.num}\n            image={frame.image}\n            onDelete={onDelete}\n            onDouble={onDouble}\n            onNumClick={onNumClick}\n            onFrameClick={onFrameClick}\n          />\n        ))}\n        <button className=\"add-frame-button\" onClick={onAddFrame}>Add a new frame</button>\n      </div>\n    </div>\n  );\n}\n\nFrameList.propTypes = {\n  activeFrame: PropTypes.number,\n  onDelete: PropTypes.func,\n  onDouble: PropTypes.func,\n  onNumClick: PropTypes.func,\n  frames: PropTypes.arrayOf(\n    PropTypes.shape({\n      num: PropTypes.number,\n      image: PropTypes.any,\n    }),\n  ),\n  onFrameClick: PropTypes.func,\n  onAddFrame: PropTypes.func,\n};\n\nexport default FrameList;\n","import React from 'react';\nimport './colorPalette.css';\n\nfunction ColorPalette(props) {\n  return (\n    <input className=\"color-palette\" type=\"color\" {...props} />\n  );\n}\n\nexport default ColorPalette;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ColorPalette from '../colorPalette/ColorPalette';\n\nimport './tools.css';\n\nfunction Tools({\n  active,\n  onDrawAction,\n  onChooseColorAction,\n  onPrimaryColorChange,\n  onSecondaryColorChange,\n  onColorChange,\n  primaryColor,\n  secondaryColor,\n}) {\n  return (\n    <div className=\"tools-wrapper\">\n      <ul className=\"tools\">\n        <li className={`tools__item ${active.isDrawAction ? 'tools__item--active' : ''}`}>\n          <button className='draw-action' onClick={onDrawAction} />\n        </li>\n        <li className={`tools__item ${active.isChooseColorAction ? 'tools__item--active' : ''}`}>\n          <button className=\"choose-color-action\" onClick={onChooseColorAction} />\n        </li>\n        <li className=\"tools__item\">\n          <button className=\"fill-color-action\" />\n        </li>\n        <li className=\"tools__item\">\n          <button className=\"erase-action\" />\n        </li>\n      </ul>\n      <div className=\"color-palette-wrapper\">\n        <div className=\"color-palette__primary\">\n          <ColorPalette onChange={onPrimaryColorChange} value={primaryColor} />\n        </div>\n        <div className=\"color-palette__secondary\">\n          <ColorPalette onChange={onSecondaryColorChange} value={secondaryColor} />\n        </div>\n        <button className=\"color-change\" onClick={onColorChange} />\n      </div>\n    </div>\n  );\n}\n\nTools.propTypes = {\n  active: PropTypes.shape({\n    isDrawAction: PropTypes.bool,\n    isChooseColorAction: PropTypes.bool,\n    isColorPaletteAction: PropTypes.bool,\n  }),\n  onDrawAction: PropTypes.func,\n  onChooseColorAction: PropTypes.func,\n  onColorPaletteShow: PropTypes.func,\n  currentColor: PropTypes.string,\n  onPrimaryColorChange: PropTypes.func,\n  onColorChange: PropTypes.func,\n  onSecondaryColorChange: PropTypes.func,\n  primaryColor: PropTypes.string,\n  secondaryColor: PropTypes.string,\n};\n\nTools.defaultProps = {\n  active: false,\n};\n\nexport default Tools;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './preview.css';\n\nfunction Preview({\n  frames, framesPerSecond, onFullScreenShow,\n}) {\n  const [frameInd, setFrameInd] = useState(0);\n  const currentFrame = frames[frameInd];\n  const previewRef = useRef(null);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const nextFrame = frameInd < frames.length - 1\n        ? frameInd + 1\n        : 0;\n\n      setFrameInd(nextFrame);\n    }, 1000 / framesPerSecond);\n\n    return () => clearTimeout(timer);\n  }, [framesPerSecond, frameInd, frames]);\n  const getTooltip = (() => <span className=\"tooltip\">Full screen preview</span>);\n\n  return (\n    <div className=\"fullscreen-preview\" ref={previewRef}>\n      <div className=\"preview\">\n        {currentFrame && currentFrame.image\n          ? <img className=\"frame__img-active\" src={currentFrame.image} alt=\"Frame\" />\n          : <div className=\"emptyFrame\" />\n        }\n        <button onClick={ e => onFullScreenShow(previewRef.current, e)} onMouseOver={getTooltip} className=\"full-screen-action\" />\n      </div>\n    </div>\n  );\n}\n\nPreview.propTypes = {\n  frames: PropTypes.arrayOf(\n    PropTypes.shape({\n      num: PropTypes.number,\n      image: PropTypes.any,\n    }),\n  ),\n  framesPerSecond: PropTypes.number,\n  onFullScreenShow: PropTypes.func,\n};\n\nexport default Preview;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './fps.css';\n\nfunction FPS({ onChange }) {\n  const [framesPerSecond, setFramesPerSecond] = useState(1);\n  return (\n    <div className=\"FPS-wrapper\">\n      <span>{framesPerSecond} FPS</span>\n      <input type=\"range\" name=\"speed\" min={1} max={24} defaultValue={1} onChange={ (e) => {\n        setFramesPerSecond(+e.target.value);\n        onChange(framesPerSecond);\n      }} />\n    </div>\n  );\n}\n\nFPS.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default FPS;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './canvas.css';\n\nexport const CanvasContext = React.createContext(null);\n\nfunction Canvas(props) {\n  const [canvasRef, setCanvasRef] = useState(null);\n\n  useEffect(() => {\n    const clearCanvas = () => canvasRef.getContext('2d').clearRect(0, 0, props.width, props.height);\n\n    if (canvasRef) {\n      clearCanvas();\n\n      if (props.image) {\n        const img = new Image();\n\n        img.src = props.image;\n        const handler = () => {\n          canvasRef.getContext('2d').drawImage(img, 0, 0);\n\n          img.removeEventListener('load', handler);\n        };\n        img.addEventListener('load', handler);\n      }\n    }\n  }, [props.image, canvasRef, props.width, props.height]);\n\n  return (\n    <canvas\n      className=\"canvas\"\n      ref={ref => setCanvasRef(ref)}\n      width={`${props.width}px`}\n      height={`${props.height}px`}\n      >\n      <CanvasContext.Provider value={canvasRef}>\n        {props.children}\n      </CanvasContext.Provider>\n    </canvas>\n  );\n}\n\nCanvas.propTypes = {\n  children: PropTypes.node,\n  image: PropTypes.string,\n  height: PropTypes.number,\n  width: PropTypes.number,\n};\n\nexport default Canvas;\n","import { useContext, useEffect } from 'react';\nimport { CanvasContext } from './Canvas';\n\nconst Pen = ({ onMouseUp, currentColor }) => {\n  const canvas = useContext(CanvasContext);\n\n  useEffect(() => {\n    if (!canvas) {\n      return Function.prototype;\n    }\n\n    let isMouseDown = false;\n    const setMouseDown = () => {\n      isMouseDown = !isMouseDown;\n    };\n    const getImgLink = () => {\n      onMouseUp(canvas.toDataURL());\n    };\n\n    const handler = (e) => {\n      const ctx = canvas.getContext('2d');\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      ctx.lineWidth = 10;\n\n      if (isMouseDown) {\n        ctx.lineTo(x, y);\n        ctx.strokeStyle = currentColor;\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, Math.PI * 2);\n        ctx.fillStyle = currentColor;\n        ctx.fill();\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.beginPath();\n      }\n    };\n\n    canvas.addEventListener('mousemove', handler);\n    canvas.addEventListener('mousedown', setMouseDown);\n    canvas.addEventListener('mouseup', setMouseDown);\n    canvas.addEventListener('mouseup', getImgLink);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handler);\n      canvas.removeEventListener('mousedown', setMouseDown);\n      canvas.removeEventListener('mouseup', setMouseDown);\n      canvas.removeEventListener('mouseup', getImgLink);\n    };\n  }, [canvas, onMouseUp, currentColor]);\n\n  return null;\n};\n\nexport default Pen;\n","import React, { useState } from 'react';\nimport './app.css';\nimport FrameList from '../frameList/FrameList';\nimport Tools from '../tools/Tools';\nimport Preview from '../preview/Preview';\nimport FPS from '../FPS/FPS';\nimport Canvas from '../canvas/Canvas';\nimport Pen from '../canvas/Pen';\n\nconst useSetToolAction = () => {\n  const [toolAction, setToolAction] = useState(\n    { isDrawAction: false, isChooseColorAction: false, isColorPaletteAction: false },\n  );\n\n  const toggleToolAction = (keyName) => {\n    const { [keyName]: keyValue, ...newObj } = toolAction;\n\n    Object.keys(newObj).forEach((key) => {\n      newObj[key] = false;\n    });\n\n    newObj[keyName] = !keyValue;\n    setToolAction(newObj);\n  };\n\n  return { toggleToolAction, toolAction };\n};\n\nfunction App() {\n  const [framesPerSecond, setFramesPerSecond] = useState(1);\n  const [frames, setFrames] = useState([{ num: 0 }]);\n  const [activeFrame, setActiveFrame] = useState(0);\n  const { toggleToolAction, toolAction } = useSetToolAction();\n  const [primaryColor, setPrimaryColor] = useState('#000');\n  const [secondaryColor, setSecondaryColor] = useState('#000');\n\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <h1>Animation player</h1>\n      </header>\n      <main>\n        <aside className=\"sidebar-left\">\n          <Tools\n            active={toolAction}\n            onDrawAction={() => {\n              toggleToolAction('isDrawAction');\n            }}\n            onChooseColorAction={() => {\n              toggleToolAction('isChooseColorAction');\n            }}\n            onPrimaryColorChange={ e => setPrimaryColor(e.target.value)}\n            onSecondaryColorChange={ e => setSecondaryColor(e.target.value)}\n            onColorChange={() => {\n              console.log(1)\n              const currentColor = primaryColor;\n              console.log(primaryColor)\n              setPrimaryColor(secondaryColor);\n              setSecondaryColor(currentColor);\n              console.log(secondaryColor);\n            }}\n            primaryColor={primaryColor}\n            secondaryColor={secondaryColor}\n          />\n          <FrameList\n            activeFrame={activeFrame}\n            frames={frames}\n            onDelete={(num) => {\n              let newArr = [...frames];\n\n              newArr.splice(num, 1);\n              newArr = newArr.map((elem, ind) => ({\n                ...elem,\n                num: ind,\n              }));\n\n              if (newArr.length === 0) {\n                newArr.push({ num: 0 });\n              }\n\n              setFrames(newArr);\n              setActiveFrame(activeFrame - 1);\n            }}\n            onFrameClick={num => setActiveFrame(num)}\n            onDouble={(num) => {\n              let newArr = [...frames];\n\n              newArr.splice(num, 0, newArr[num]);\n              newArr = newArr.map((elem, ind) => ({\n                ...elem,\n                num: ind,\n              }));\n\n              setFrames(newArr);\n              setActiveFrame(num + 1);\n            }\n            }\n            onAddFrame={() => {\n              const nextFrame = frames.length;\n              const newArr = frames.slice();\n\n              newArr.push({ num: nextFrame });\n\n              setActiveFrame(nextFrame);\n              setFrames(newArr);\n            }}\n          />\n        </aside>\n        <div className=\"content\">\n          {frames[activeFrame] && (\n            <Canvas width={800} height={700} image={frames[activeFrame].image}>\n              {toolAction.isDrawAction && (\n                <Pen\n                  onMouseUp={ (value) => {\n                    const newArr = frames.slice();\n                    newArr[activeFrame].image = value;\n                    setFrames(newArr);\n                  }}\n                  currentColor={primaryColor}\n                />\n              )}\n            </Canvas>\n          )}\n        </div>\n        <aside className=\"sidebar-right\">\n          <Preview frames={frames} framesPerSecond={framesPerSecond} onFullScreenShow={ (el) => {\n            el.requestFullscreen();\n          }} />\n          <FPS onChange={value => setFramesPerSecond(value)} />\n        </aside>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}